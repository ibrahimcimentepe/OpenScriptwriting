using System;
using System.IO;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Markup;
using TurkishCeltx.Model;
using TurkishCeltx.ViewModel;

namespace TurkishCeltx.Commands
{
   public class LoadDocumentCommand : ICommand
   {
      #region Fields

      // Member variables
      private MainTextAreaViewModel m_ViewModel;

      #endregion

      #region Constructor

      /// <summary>
      /// Default constructor.
      /// </summary>
      public LoadDocumentCommand(MainTextAreaViewModel viewModel)
      {
         m_ViewModel = viewModel;
      }

      #endregion

      #region ICommand Members

      /// <summary>
      /// Whether the LoadDocumentCommand is enabled.
      /// </summary>
      public bool CanExecute(object parameter)
      {
         return m_ViewModel.CurrentProject != null;
      }

      /// <summary>
      /// Actions to take when CanExecute() changes.
      /// </summary>
      public event EventHandler CanExecuteChanged
      {
         add
         {
            CommandManager.RequerySuggested += value;
         }
         remove
         {
            CommandManager.RequerySuggested -= value;
         }
      }

      /// <summary>
      /// Executes the LoadDocumentCommand
      /// </summary>
      public void Execute(object parameter)
      {
         /* We set the Document property on the view model to simulate
          * a document load from the app back-end. */

         // updateDocModelFromXml(File.ReadAllText(Configuration.getMainPath() + @"Doc\SavedFile.txt"));
         updateDocModelFromXml();

         //m_ViewModel.DocumentXaml = "<FlowDocument PagePadding=\"5,0,5,0\" AllowDrop=\"True\" "
         //    + "xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\">"
         //    + "<Paragraph>Text generated by app back-end</Paragraph></FlowDocument>";
      }

      private void updateDocModelFromXml()
      {
         // TODO create temp.txt if does not exist..
         string xamlText = File.ReadAllText(Configuration.getMainPath() + m_ViewModel.CurrentProject.ScriptName + "\\temp.txt");
         
         m_ViewModel.DocumentXaml = xamlText;
      }

      #endregion
   }
}
